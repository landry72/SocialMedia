
$ Mkdir socialmedia
cd socialmedia
Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia
$ npm init -y
Wrote to C:\socialmedia\package.json:

{
  "name": "socialmedia",
  "version": "1.0.0",
  "description": "",
  "main": "server.js",
  "scripts": {
    "star": "node server.js",
    "devStart": "nodemon server.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}

Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia
$ npm i express ejs express-ejs-layouts
Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia
$ npm i --save-dev nodemon

Create the server in the socialmedia folder server.js
if (process.env.NODE_ENV !== 'production') {
  require('dotenv').load()
}

const express = require('express')
const app = express()
const expressLayouts = require('express-ejs-layouts')

const indexRouter = require('./routes/index')

app.set('view engine', 'ejs')
app.set('views', __dirname + '/views')
app.set('layout', 'layouts/layout')
app.use(expressLayouts)
app.use(express.static('public'))

const mongoose = require('mongoose')
mongoose.connect(process.env.DATABASE_URL, { useNewUrlParser: true })
const db = mongoose.connection
db.on('error', error => console.error(error))
db.once('open', () => console.log('Connected to Mongoose'))

app.use('/', indexRouter)

app.listen(process.env.PORT || 3000)

------------------------------------------------------------------

Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia
$ npm run devStart    // start the server
Because no route has not been set yet localhost: says "Cannot GET /"
We are going to set the route to fix that.
Create a views folder.
Create a routes folder. That is where we keep all the routes.
Create a public folder - the views, models, and public folders constitute the MVC
Now create ooyr first route - create routes/index.js

The app is working fine - Let's download and setup the mongoDB
MongoDB shell version v5.0.5
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("e3210565-b723-4ee3-bc43-2bfdfd6bdf7d") }
MongoDB server version: 5.0.5
================
Warning: the "mongo" shell has been superseded by "mongosh",
which delivers improved usability and compatibility.The "mongo" shell has been deprecated and will be removed in
an upcoming release.
For installation instructions, see
https://docs.mongodb.com/mongodb-shell/install/
================
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
        https://docs.mongodb.com/
Questions? Try the MongoDB Developer Community Forums
        https://community.mongodb.com
---
The server generated these startup warnings when booting:
        2022-01-23T14:14:41.655-05:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
---
---
        Enable MongoDB's free cloud-based monitoring service, which will then receive and display
        metrics about your deployment (disk utilization, CPU, operation statistics, etc).

        The monitoring data will be available on a MongoDB website with a unique URL accessible to you
        and anyone you share the URL with. MongoDB may use this information to make product
        improvements and to suggest MongoDB products and deployment options to you.

        To enable free monitoring, run the following command: db.enableFreeMonitoring()
        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---
> show databases
admin   0.000GB
config  0.000GB
local   0.000GB
>
Back => Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia
npm i mongoose
$ npm i --save-dev dotenv  // to protect sensitive info
Create the .env file in socialmedia










Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia
Landry@LAPTOP-4CSFGBJH MINGW64 /c/socialmedia





